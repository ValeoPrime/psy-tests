{"version":3,"sources":["components/finishedQuestionnaire/FinishedQuestionnaire.css","components/Navigation/Drawer/Drawer.css","components/ActiveQuestionnaire/ActiveQuestionnaire.css","components/Navigation/MenuToggle/MenuToggle.css","containers/MainQuiz.css","components/ActiveQuestionnaire/AnswersList/AnswerItem/AnswerItem.css","components/UI/button/button.css","components/UI/GuestScreen/GuestScreen.css","components/UI/GuestScreen/ItemsList/ListItem/ListItem.css","containers/Auth/Auth.css","components/UI/Input/Input.css","containers/QuizeCreator/QuizCreator.css","containers/QuizeCreator/QuestionareTitle/QuestionareTitle.css","hoc/Layout/Layout.css","components/UI/BackDrop/BackDrop.css","components/ActiveQuestionnaire/AnswersList/AnswersList.css","components/UI/Loader/Loader.css","components/UI/GuestScreen/ItemsList/itemsList.css","images/tests-category/biology-min.jpg","images/tests-category/geography-min.jpg","images/tests-category/chemistry-min.png","images/tests-category/ozer-min.jpeg","components/UI/Select/Select.css","App.css","components/Navigation/MenuToggle/MenuToggle.js","components/UI/BackDrop/BackDrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuestionnaire/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuestionnaire/AnswersList/AnswersList.js","components/ActiveQuestionnaire/ActiveQuestionnaire.js","components/UI/button/button.js","components/finishedQuestionnaire/FinishedQuestionnaire.js","components/UI/Loader/Loader.js","store/actions/guestScreenActions.js","store/actions/actionTypes.js","containers/MainQuiz.js","components/UI/GuestScreen/ItemsList/ListItem/ListItem.js","components/UI/GuestScreen/ItemsList/ItemsList.js","components/UI/GuestScreen/GuestScreen.js","components/UI/Input/Input.js","store/actions/authActions.js","containers/Auth/Auth.js","components/UI/Select/Select.js","FormFrames/formFrameworks.js","containers/QuizeCreator/QuestionareTitle/QuestionareTitle.js","store/actions/createTestActions.js","containers/QuizeCreator/QuizCreator.js","components/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/guestScreenReducer.js","store/reducers/AuthReducer.js","store/reducers/quizCreatorReducer.js","store/reducers/rootReducer.js","index.js"],"names":["module","exports","MenuToggle","props","cls","styles","isOpen","push","open","className","join","onClick","onToggle","BackDrop","Backdrop","Drawer","links","map","link","index","key","to","exact","activeClassName","active","onClose","label","this","close","isAuthenticated","Fragment","renderLinks","Component","Layout","state","menu","ToogleMenu","setState","menuClose","color","children","connect","auth","token","AnswerItem","answerState","answerClick","answer","id","text","AnswersList","answers","ActiveQuestionnaire","classes","Question","QuestionNum","textQuestion","small","totalNumQuestions","Button","button","type","disabled","FinishedQuestionnaire","rightAnswers","Object","keys","results","reduce","accum","bigInt","bigInt__success","bigInt__error","questions","length","question","onRetry","onRepeat","Loader","lds","fetchAllQuestionnaireTitles","allQuestionnaireTitles","Answer","result","isQuestionnaireFinished","activeQuestion","QuestionnaireFinished","nextQuestion","number","fetchActiveTestTitleQuestions","title","questionnaireTitle","MainQuiz","backToList","console","log","repeatHandler","fetchActiveTest","testId","location","pathname","split","MainQuizWrapper","questionsLoad","isFinished","retryHandler","allTests","dispatch","a","Title","axios","get","data","forEach","item","questionareTitle","error","answerId","getState","rightAnswerId","timeout","window","setTimeout","clearTimeout","ListItem","src","biology","geography","chemistry","ozerMin","localStorage","getItem","url","image","questionareImg","alt","delete","startTest","ItemsList","itemsList","allTitles","GuestScreen","redirect","history","guestScreenOff","fetchAllTestsTitles","guestScreen","testID","deleteQuestionare","TESTId","Div","response","t","b","filter","isInvalid","valid","touched","shouldValidate","Input","inputType","htmlFor","Math","random","invalid","value","onChange","errorMessage","authSuccess","idToken","autoLogout","time","logout","removeItem","Auth","isFormValid","formControls","email","validations","required","password","minLength","submitHandler","event","preventDefault","loginHandler","registerHandler","onChangeHandler","formControl","control","target","validateControl","name","isValid","trim","test","String","toLowerCase","onSubmit","AuthForm","renderInput","isLogin","authData","returnSecureToken","post","expirationDate","Date","getTime","expiresIn","setItem","localId","Select","options","option","createControl","config","validation","validate","validateForm","hasOwnProperty","QuestionareTitle","QuestionareTitleChange","QuestionareImgHandler","createQuiz","quiz","then","res","createFormControls","option1","option2","option3","option4","QuizCreator","questionareTitleSelected","addQuestionHandler","questionItem","addQuestion","createQuizHandler","changeHandler","controlName","renderInputs","controlN","selectChangeHandler","inputValue","select","details","createQuizi","clearQuiz","Logout","App","autoLogin","routes","path","component","withRouter","Boolean","hostname","match","intialState","initialState","initState","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.097775ce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuestionnaire\":\"FinishedQuestionnaire__FinishedQuestionnaire___1RBap\",\"bigInt\":\"FinishedQuestionnaire__bigInt___2JLRi\",\"bigInt__success\":\"FinishedQuestionnaire__bigInt__success___Bu_gE\",\"bigInt__error\":\"FinishedQuestionnaire__bigInt__error___2rtIa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer__Drawer___2Nzcl\",\"close\":\"Drawer__close___3eUiV\",\"active\":\"Drawer__active___WxScd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuestionnaire\":\"ActiveQuestionnaire__ActiveQuestionnaire___DWwUW\",\"Question\":\"ActiveQuestionnaire__Question___BgvDm\",\"small\":\"ActiveQuestionnaire__small___1uPtt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle__MenuToggle___1mqO0\",\"open\":\"MenuToggle__open___1kMjG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainQuiz\":\"MainQuiz__MainQuiz___2xG3-\",\"MainQuizWrapper\":\"MainQuiz__MainQuizWrapper___Jyt6o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem__AnswerItem___1ykmf\",\"success\":\"AnswerItem__success___2fUsY\",\"error\":\"AnswerItem__error___26eF_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button__button___3IxNo\",\"error\":\"button__error___14BS3\",\"success\":\"button__success___aycff\",\"primary\":\"button__primary___dNO26\",\"entry\":\"button__entry___1OMwH\",\"delete\":\"button__delete___11FMU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GuestScreen\":\"GuestScreen__GuestScreen___vT31O\",\"Div\":\"GuestScreen__Div___1yz2g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ListItem\":\"ListItem__ListItem___2hey1\",\"image\":\"ListItem__image___1hyAt\",\"all\":\"ListItem__all___2kItJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth__Auth___2YUr1\",\"AuthForm\":\"Auth__AuthForm___2Xb4F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input___s67N0\",\"invalid\":\"Input__invalid___flTJ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator__QuizCreator___1FpN9\",\"details\":\"QuizCreator__details___3GXdc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuestionareTitle\":\"QuestionareTitle__QuestionareTitle___UCwso\",\"imgLabel\":\"QuestionareTitle__imgLabel___3LEhD\",\"error\":\"QuestionareTitle__error___2fW6j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout__Layout___2C2_c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"BackDrop__Backdrop___3xmex\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList__AnswersList___1WbU-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lds\":\"Loader__lds___3ZToI\",\"lds-dual-ring\":\"Loader__lds-dual-ring___i0nZL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemsList\":\"itemsList__itemsList___1WI4F\"};","module.exports = __webpack_public_path__ + \"static/media/biology-min.8e9a8607.jpg\";","module.exports = __webpack_public_path__ + \"static/media/geography-min.7fb6283a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chemistry-min.cd9be381.png\";","module.exports = __webpack_public_path__ + \"static/media/ozer-min.54ef2ae2.jpeg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select__Select___1rPbL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App__App___1o-Fp\"};","import React from 'react'\r\nimport styles from './MenuToggle.css'\r\n\r\n\r\nconst MenuToggle = (props) => {\r\n    const cls = [\r\n        styles.MenuToggle,\r\n        'fa'\r\n    ]\r\n\r\n    if(props.isOpen){\r\n        cls.push('fa-times')\r\n        cls.push(styles.open)\r\n    }else{\r\n        cls.push('fa-bars')\r\n    }\r\n    \r\n    return(\r\n        <i \r\n            className={cls.join(' ')}\r\n            onClick={props.onToggle}\r\n        />\r\n    )\r\n}\r\n\r\nexport default MenuToggle","import React from 'react'\r\nimport styles from './BackDrop.css'\r\n\r\nconst BackDrop = (props) => {\r\n    \r\n    return(\r\n        <div \r\n        className={styles.Backdrop}\r\n        onClick={props.onClick}\r\n        >\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BackDrop","import React, {Component} from 'react'\r\nimport styles from './Drawer.css'\r\nimport {NavLink} from 'react-router-dom'\r\nimport BackDrop from '../../UI/BackDrop/BackDrop'\r\n\r\n\r\nclass Drawer extends Component {\r\n\r\n    renderLinks(links){\r\n        return links.map((link, index) => {\r\n            return (\r\n                <li key={index}\r\n                >\r\n                    <NavLink\r\n                    to={link.to}\r\n                    exact={link.exact}\r\n                    activeClassName={styles.active}\r\n                    onClick={this.props.onClose}\r\n                    >\r\n                        {link.label}\r\n                    </NavLink>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n    \r\n    \r\n    render(){\r\n        const cls = [styles.Drawer]\r\n        \r\n        if(!this.props.isOpen){\r\n            cls.push(styles.close)\r\n        } \r\n        \r\n        let links = [{to: '/', label: 'Список тестов', exact: true}]\r\n\r\n        if(this.props.isAuthenticated){\r\n            links.push({to: '/create-quize', label: 'Создать тест', exact: false})\r\n            links.push({to: '/logout', label: 'Выйти', exact: false})\r\n        } else {\r\n            links.push({to: '/auth', label: 'Аутентификация', exact: false})\r\n        }\r\n\r\n        return(\r\n            <React.Fragment>\r\n                <nav className={cls.join(' ')}>\r\n                    <ul>\r\n                        {this.renderLinks(links)}\r\n                    </ul>\r\n                </nav>\r\n                \r\n                {this.props.isOpen \r\n                ? <BackDrop\r\n                onClick={this.props.onClose}\r\n                /> \r\n                : null}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Drawer","import React, { Component } from 'react'\r\nimport styles from './Layout.css'\r\nimport MenuToggle from '../../components/Navigation/MenuToggle/MenuToggle'\r\nimport Drawer from '../../components/Navigation/Drawer/Drawer'\r\nimport { connect } from 'react-redux';\r\n\r\nclass Layout extends Component {\r\n\r\n    state = {\r\n        menu: false\r\n    }\r\n\r\n    ToogleMenu = () => {\r\n        this.setState({\r\n            menu: !this.state.menu\r\n        })\r\n    }\r\n\r\n    menuClose = () => {\r\n        this.setState({\r\n            menu: false\r\n        })\r\n    }\r\n\r\n    styles = {\r\n        color: {\r\n            \"background-color\": 'red'\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.Layout}>\r\n                <Drawer\r\n                    isOpen={this.state.menu}\r\n                    onClose={this.menuClose}\r\n                    isAuthenticated={this.props.isAuthenticated}\r\n                />\r\n                <MenuToggle\r\n                    onToggle={this.ToogleMenu}\r\n                    isOpen={this.state.menu}\r\n                />\r\n\r\n                <main>\r\n                    {this.props.children}\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isAuthenticated: !!state.auth.token\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout)","import React from 'react'\r\nimport styles from './AnswerItem.css'\r\n\r\n\r\nconst AnswerItem = (props) => {\r\n    const cls = [styles.AnswerItem]\r\n\r\n    if(props.answerState){\r\n        cls.push(styles[props.answerState])\r\n    }\r\n    \r\n    return(\r\n        <li className={cls.join(' ')}\r\n        onClick={()=> props.answerClick(props.answer.id)}\r\n        >\r\n            {props.answer.text}\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default AnswerItem","import React from 'react'\r\nimport styles from './AnswersList.css'\r\nimport AnswerItem from './AnswerItem/AnswerItem'\r\n\r\nconst AnswersList = (props) => {\r\n    return (\r\n        <ul className={styles.AnswersList}>\r\n\r\n            {props.answers.map((answer, index) => {\r\n\r\n                return (\r\n                    <AnswerItem\r\n                        key={index}\r\n                        answer={answer}\r\n                        answerClick={props.answerClick}\r\n                        answerState={props.answerState ? props.answerState[answer.id] : null}\r\n                    />\r\n                )\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default AnswersList","import React from 'react'\r\nimport classes from './ActiveQuestionnaire.css'\r\nimport AnswersList from './AnswersList/AnswersList'\r\n\r\nconst ActiveQuestionnaire = (props) => {\r\n    return (\r\n        <div className={classes.ActiveQuestionnaire}>  \r\n         \r\n            <p className={classes.Question}>\r\n                <span>\r\n                    <strong>{props.QuestionNum}.</strong> &nbsp;\r\n                    {props.textQuestion}\r\n                </span>\r\n\r\n                <small className={classes.small}>{props.QuestionNum} из {props.totalNumQuestions}</small>\r\n            </p>\r\n\r\n            <AnswersList \r\n                answers={props.answers}\r\n                answerClick={props.answerClick}\r\n                answerState={props.answerState}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActiveQuestionnaire","import React from 'react'\r\nimport styles from './button.css'\r\n\r\nconst Button = (props) => {\r\n    const cls = [\r\n        styles.button,\r\n        styles[props.type],\r\n    ]\r\n\r\n    return (\r\n        <button \r\n        className={cls.join(' ')}\r\n        disabled={props.disabled || false}\r\n        onClick={props.onClick}>\r\n            {props.children}\r\n        </button>\r\n   )\r\n}\r\n\r\nexport default Button","import React from \"react\";\r\nimport styles from \"./FinishedQuestionnaire.css\";\r\nimport Button from \"../UI/button/button\";\r\n\r\nconst FinishedQuestionnaire = (props) => {\r\n  const rightAnswers = Object.keys(props.results).reduce((accum, key) => {\r\n    if (props.results[key] === \"success\") {\r\n      accum++;\r\n    }\r\n    return accum;\r\n  }, 0);\r\n  return (\r\n    <div className={styles.FinishedQuestionnaire}>\r\n      <div className={styles.bigInt}>\r\n        <div className={styles.bigInt__success}> Правильно <br/> <span>{rightAnswers}</span></div>\r\n        <div className={styles.bigInt__error}> Не правильно <br/> <span>{props.questions.length - rightAnswers}</span></div>\r\n      </div>\r\n      <ul>\r\n        {props.questions.map((question, index) => {\r\n          const cls = [\r\n            \"fa\",\r\n            props.results[question.id] === \"error\" ? \"fa-times\" : \"fa-check\",\r\n          ];\r\n\r\n          return (\r\n            <li key={index}>\r\n              <strong>{index + 1}.</strong>&nbsp;\r\n              {question.question}\r\n              <i className={cls.join(\" \")} />\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n\r\n      <p>\r\n        Правильно {rightAnswers} из {props.questions.length}\r\n      </p>\r\n\r\n      <div>\r\n        <Button type=\"primary\" onClick={props.onRetry}>\r\n          {\" \"}\r\n          Повторить\r\n        </Button>\r\n\r\n        <Button type=\"success\" onClick={props.onRepeat}>\r\n          {\" \"}\r\n          Перейти к списку тестов\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FinishedQuestionnaire;\r\n","import React from 'react'\r\nimport styles from './Loader.css'\r\n\r\nconst Loader = () => {\r\n    \r\n    return (\r\n        <div className={styles.lds} />\r\n    )\r\n}\r\n\r\nexport default Loader","import axios from 'axios'\r\n\r\nimport {    FETCH_QUESTIONARE_TITLES, \r\n    FETCH_QUESTIONARE_TITLES_ERROR, \r\n    FETCH_TEST_ID,\r\n    FETCH_ACTIVE_QUESTIONARE_TITLE_AND_QUESTIONS,\r\n    RETRY_HANDLER, \r\n    ANSWER,\r\n    IS_QUESTIONNAIRE_FINISHED,\r\n    NEXT_QUESTION,\r\n    REPEAT_HANDLER,\r\n    GUEST_SCREEN_OFF,\r\n    QUIZ_SET_STATE,\r\n    DELETE_QUESTIONARE\r\n} from './actionTypes'\r\n\r\nexport function fetchAllTestsTitles() {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.get('https://quiz-316f6.firebaseio.com/quizes.json')\r\n\r\n            const allQuestionnaireTitles = []\r\n\r\n            Object.keys(response.data).forEach(key => {\r\n                \r\n                let t = [key, response.data[key][0].questionareTitle]\r\n                let b = response.data[key][0].questionareImg //Добавление картинки к заголовкам тестов\r\n                t.push(b)\r\n                \r\n                \r\n                \r\n                allQuestionnaireTitles.push(t)  \r\n\r\n            })\r\n            \r\n            dispatch(fetchAllQuestionnaireTitles(allQuestionnaireTitles))\r\n\r\n        } catch (e) {\r\n            dispatch(fetchAllQuestionnaireTitlesError(e))\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function testID(testId) {\r\n    return {\r\n        type: FETCH_TEST_ID,\r\n        testId: testId\r\n    }\r\n}\r\n\r\nexport function fetchAllQuestionnaireTitles(allQuestionnaireTitles) {\r\n    return {\r\n        type: FETCH_QUESTIONARE_TITLES,\r\n        allQuestionnaireTitles\r\n    }\r\n}\r\n\r\nexport function fetchAllQuestionnaireTitlesError(e) {\r\n    return {\r\n        type: FETCH_QUESTIONARE_TITLES_ERROR,\r\n        error: e\r\n    }\r\n}\r\n\r\nexport function fetchActiveTest(testId) {\r\n    return async dispatch => {\r\n        let Title = null\r\n        let questions = []\r\n        try {\r\n            const response = await axios.get(`https://quiz-316f6.firebaseio.com/quizes/${testId}.json`)\r\n            response.data.forEach(item => {\r\n                Title = item.questionareTitle\r\n                questions.push(item)\r\n            })\r\n\r\n            dispatch(fetchActiveTestTitleQuestions(Title, questions))\r\n        } catch (e) {\r\n            dispatch(fetchActiveTestTitleQuestionsError(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport function answerClick(answerId) {\r\n    return (dispatch,getState)  => {\r\n        const state = getState().allTests\r\n\r\n        if (state.answerState) {\r\n            const key = Object.keys(state.answerState)[0]\r\n            if (state.answerState[key] === 'success') {\r\n                return\r\n            }\r\n        }\r\n\r\n        const question = state.questions[state.activeQuestion]\r\n        const result = state.results\r\n\r\n        if (question.rightAnswerId === answerId) {\r\n            if (!result[question.id]) {\r\n                result[question.id] = 'success'\r\n            }\r\n\r\n            dispatch(Answer({ [answerId]: 'success' }, result))\r\n\r\n            const timeout = window.setTimeout(() => {\r\n                if (isQuestionnaireFinished(state)) {\r\n                    dispatch(QuestionnaireFinished())\r\n                } else {\r\n                    dispatch(nextQuestion(state.activeQuestion + 1))\r\n                }\r\n                window.clearTimeout(timeout)\r\n            }, 1000)\r\n\r\n        } else {\r\n            result[question.id] = 'error'\r\n            dispatch(Answer({[answerId]: 'error'}, result))\r\n            const timeout = window.setTimeout(() => {\r\n                if (isQuestionnaireFinished(state)) {\r\n                    dispatch(QuestionnaireFinished())\r\n                } else {\r\n                    dispatch(nextQuestion(state.activeQuestion + 1))\r\n                }\r\n                window.clearTimeout(timeout)\r\n            }, 1000)\r\n        }\r\n    }\r\n}\r\n\r\nexport function quizSetState(answerState, results) {\r\n    return {\r\n      type: QUIZ_SET_STATE,\r\n      answerState, results\r\n    }\r\n  }\r\n\r\nexport function Answer(answerState, result) {\r\n    return {\r\n        type: ANSWER,\r\n        answerState: answerState,\r\n        results: result\r\n    }\r\n}\r\n\r\n\r\nexport function isQuestionnaireFinished(state) {\r\n    return state.activeQuestion + 1 === state.questions.length\r\n}\r\n\r\nexport function QuestionnaireFinished() {\r\n    return {\r\n        type: IS_QUESTIONNAIRE_FINISHED,\r\n    }\r\n}\r\n\r\nexport function nextQuestion(number) {\r\n    return {\r\n        type: NEXT_QUESTION,\r\n        number\r\n    }\r\n}\r\n\r\n\r\nexport function fetchActiveTestTitleQuestions(title, questions) {\r\n    return {\r\n        type: FETCH_ACTIVE_QUESTIONARE_TITLE_AND_QUESTIONS,\r\n        questionnaireTitle: title,\r\n        questions: questions\r\n    }\r\n}\r\n\r\nexport function fetchActiveTestTitleQuestionsError(e) {\r\n    return {\r\n        type: FETCH_QUESTIONARE_TITLES_ERROR,\r\n        error: e\r\n    }\r\n}\r\n\r\nexport function retryHandler() {\r\n    return {\r\n        type: RETRY_HANDLER\r\n    }\r\n}\r\n\r\nexport function repeatHandler() {\r\n    return {\r\n        type: REPEAT_HANDLER\r\n    }\r\n}\r\n\r\nexport function guestScreenOff() {\r\n    return {\r\n        type: GUEST_SCREEN_OFF\r\n    }\r\n}\r\n\r\nexport function deleteQuestionare(id) {\r\n    \r\n\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            await axios.delete(`https://quiz-316f6.firebaseio.com/quizes/${id}.json`)\r\n\r\n            dispatch(localDeleteQuestionare(getState().allTests.allQuestionnaireTitles.filter(item => item[0] !== id)))\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nfunction localDeleteQuestionare (allQuestionnaireTitles){\r\n    return {\r\n        type: DELETE_QUESTIONARE,\r\n        allQuestionnaireTitles\r\n    }\r\n}\r\n","export const FETCH_QUESTIONARE_TITLES = 'FETCH_QUESTIONARE_TITLES'\r\nexport const FETCH_QUESTIONARE_TITLES_ERROR = 'FETCH_QUESTIONARE_TITLES_ERROR'\r\nexport const FETCH_TEST_ID = 'FETCH_TEST_ID'\r\n\r\nexport const FETCH_ACTIVE_QUESTIONARE_TITLE_AND_QUESTIONS = 'FETCH_ACTIVE_QUESTIONARE_TITLE_AND_QUESTIONS'\r\nexport const RETRY_HANDLER = 'RETRY_HANDLER'\r\nexport const REPEAT_HANDLER = 'REPEAT_HANDLER'\r\nexport const ANSWER = 'ANSWER'\r\nexport const DELETE_QUESTIONARE = 'DELETE_QUESTIONARE'\r\n\r\n\r\nexport const IS_QUESTIONNAIRE_FINISHED = 'IS_QUESTIONNAIRE_FINISHED'\r\nexport const NEXT_QUESTION = 'NEXT_QUESTION'\r\nexport const QUESTION = 'QUESTION'\r\nexport const CREATE_QUIZ  = 'CREATE_QUIZ'\r\n\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'\r\nexport const GUEST_SCREEN_OFF = 'GUEST_SCREEN_OFF'\r\nexport const QUIZ_SET_STATE = 'QUIZ_SET_STATE'\r\n","import React, { Component } from 'react'\r\nimport styles from './MainQuiz.css';\r\nimport ActiveQuestionnaire from '../components/ActiveQuestionnaire/ActiveQuestionnaire'\r\nimport FinishedQuestionnaire from '../components/finishedQuestionnaire/FinishedQuestionnaire'\r\nimport Loader from '../components/UI/Loader/Loader'\r\nimport { connect } from 'react-redux';\r\nimport { fetchActiveTest, retryHandler, repeatHandler, answerClick } from '../store/actions/guestScreenActions'\r\n\r\n\r\n\r\nclass MainQuiz extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchActiveTest(this.props.testId || this.props.location.pathname.split('/')[2])\r\n    }\r\n\r\n    backToList = () => {\r\n        console.log('Проперти',this.props);\r\n        // this.props.history.push('/')\r\n        this.props.repeatHandler()\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                {\r\n                    <div className={styles.MainQuiz}>\r\n                        <div className={styles.MainQuizWrapper}>\r\n                            <h1>{`\"${this.props.questionnaireTitle}\"`}</h1>\r\n                            {\r\n                                !this.props.questionsLoad\r\n                                    ? <Loader />\r\n                                    : this.props.isFinished\r\n                                        ? <FinishedQuestionnaire\r\n                                            results={this.props.results}\r\n                                            questions={this.props.questions}\r\n                                            onRetry={this.props.retryHandler}\r\n                                            onRepeat={this.backToList}\r\n                                        />\r\n                                        : <ActiveQuestionnaire\r\n                                            key={this.props.questions[this.props.activeQuestion].id}\r\n                                            answers={this.props.questions[this.props.activeQuestion].answers}\r\n                                            textQuestion={this.props.questions[this.props.activeQuestion].question}\r\n                                            answerClick={this.props.answerClick}\r\n                                            totalNumQuestions={this.props.questions.length}\r\n                                            QuestionNum={this.props.activeQuestion + 1}\r\n                                            answerState={this.props.answerState}\r\n                                        />\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        results: state.allTests.results, //{[id]: success error}\r\n        testId: state.allTests.testId, \r\n        isFinished: state.allTests.isFinished,\r\n        questionsLoad: state.allTests.questionsLoad,\r\n        activeQuestion: state.allTests.activeQuestion,\r\n        answerState: state.allTests.answerState,// {[answerId: 'success' or 'error']}\r\n        questionnaireTitle: state.allTests.questionnaireTitle,\r\n        key: state.allTests.key,\r\n        questions: state.allTests.questions\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchActiveTest: (testId) => dispatch(fetchActiveTest(testId)),\r\n        retryHandler: () => dispatch(retryHandler()),\r\n        repeatHandler: () => dispatch(repeatHandler()),\r\n        answerClick: (answerId) => dispatch(answerClick(answerId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainQuiz)","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Button from \"../../../button/button\";\r\nimport styles from \"./ListItem.css\";\r\nimport biology from '../../../../../images/tests-category/biology-min.jpg'\r\nimport geography from '../../../../../images/tests-category/geography-min.jpg'\r\nimport chemistry from '../../../../../images/tests-category/chemistry-min.png'\r\nimport ozerMin from '../../../../../images/tests-category/ozer-min.jpeg'\r\n\r\nconst ListItem = (props) => {\r\n\r\n    let src = {\r\n      biology: biology,\r\n      geography: geography,\r\n      chemistry: chemistry,\r\n      ozerMin: ozerMin\r\n    }\r\n\r\n  localStorage.getItem(\"token\");\r\n  let url = \"/\";\r\n  if (localStorage.getItem(\"token\")) {\r\n    url = \"/quiz/\" + props.id;\r\n  }\r\n\r\n  return (\r\n    <li className={styles.ListItem}>\r\n      <NavLink to={url}>{props.title}</NavLink>\r\n      \r\n      <img className={styles.image} src={src[props.questionareImg] || src.ozerMin} alt='Картинка'/>\r\n      <Button\r\n        type=\"delete\"\r\n        disabled={props.disabled || false}\r\n        onClick={() => props.delete(props.id) || null}\r\n      >\r\n        Х\r\n      </Button>\r\n      <Button\r\n        type=\"entry\"\r\n        disabled={props.disabled || false}\r\n        onClick={() => props.startTest(props.id) || null}\r\n      >\r\n        Начать\r\n      </Button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n","import React from 'react'\r\nimport styles from './itemsList.css'\r\nimport ListItem from './ListItem/ListItem'\r\n\r\n\r\n\r\nconst ItemsList = (props) => {\r\n    \r\n    return (\r\n        <ul className={styles.itemsList}>\r\n            {\r\n                props.allTitles.map((title, index) => {\r\n                    return (\r\n                        <ListItem\r\n                            id={title[0]}\r\n                            key={index}\r\n                            title={title[1]}\r\n                            questionareImg = {title[title.length - 1]}\r\n                            disabled = {props.disabled || null}\r\n                            \r\n                            startTest={props.startTest || null}\r\n                            delete = {props.delete || null}\r\n                        />\r\n                    )\r\n                })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ItemsList","import React, { Component } from 'react'\r\nimport styles from './GuestScreen.css'\r\nimport ItemsList from './ItemsList/ItemsList'\r\nimport MainQuiz from '../../../containers/MainQuiz'\r\nimport { connect } from 'react-redux'\r\nimport { fetchAllTestsTitles, testID, guestScreenOff, deleteQuestionare } from '../../../store/actions/guestScreenActions'\r\nimport Button from '../button/button'\r\n\r\n\r\n\r\nclass GuestScreen extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchAllTestsTitles()\r\n        \r\n    }\r\n\r\n    redirect = () => {\r\n        this.props.history.push('/auth')\r\n        this.props.guestScreenOff()\r\n    }\r\n\r\n    render() {\r\n       console.log('Пропсы гостя',this.props);\r\n        return (\r\n            <React.Fragment>\r\n                {\r\n                    !this.props.isAuthenticated\r\n                    ? <div className={styles.Div}>\r\n                        <h1>В системе доступны следующие тесты :</h1>\r\n                        <ItemsList\r\n                            allTitles={this.props.allQuestionnaireTitles} \r\n                            disabled = {true} \r\n                        />\r\n                        <p>но их нельзя запустить пока вы не авторизованы</p>\r\n                        <Button\r\n                            type=\"success\"\r\n                            children={'Регистрация/Аутентификация'}\r\n                            onClick={this.redirect}\r\n                        />\r\n                      </div>\r\n                    :\r\n                        this.props.guestScreen\r\n                        ?\r\n                        <div className={styles.GuestScreen}>\r\n                            <h1>В системе доступны следующие тесты :</h1>\r\n                            <ItemsList\r\n                                startTest={this.props.testID}\r\n                                allTitles={this.props.allQuestionnaireTitles}\r\n                                delete = {this.props.deleteQuestionare}\r\n                            />\r\n                        </div>\r\n                        :\r\n                        <MainQuiz\r\n                            TESTId={this.props.testId}\r\n                        />\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        guestScreen: state.allTests.guestScreen,\r\n        allQuestionnaireTitles: state.allTests.allQuestionnaireTitles,\r\n        \r\n        testId: state.allTests.testId,\r\n        isAuthenticated: !!state.auth.token\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchAllTestsTitles: () => dispatch(fetchAllTestsTitles()),\r\n        testID: (testId) => dispatch(testID(testId)),\r\n        guestScreenOff: () => dispatch(guestScreenOff()),\r\n        deleteQuestionare: (id) => dispatch(deleteQuestionare(id))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GuestScreen) ","import React from 'react'\r\nimport styles from './Input.css'\r\n\r\nfunction isInvalid({valid, touched, shouldValidate}) {\r\n    if(!valid && shouldValidate && touched) { // контрол не валидный, подлежит валидации, в него уже что то вводили\r\n        return true // не прошел валидацию\r\n    }\r\n    return false\r\n}\r\n\r\nconst Input = (props) => {\r\n    const inputType = props.type || 'text'\r\n    const cls = [styles.Input]\r\n    const htmlFor = `${inputType} - ${Math.random()}`\r\n\r\n    if(isInvalid(props)){\r\n        cls.push(styles.invalid)\r\n    }\r\n\r\nreturn (\r\n    <div className={cls.join(' ')}>\r\n        <label htmlFor={htmlFor}>{props.label}</label>\r\n        <input\r\n        type={inputType}\r\n        id={htmlFor}\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n        />\r\n\r\n        {isInvalid(props)\r\n            ? <span>{props.errorMessage || 'Введите верное значение'}</span>\r\n            : null\r\n        }\r\n    </div>\r\n\r\n)}\r\n\r\nexport default Input","import {AUTH_SUCCESS, AUTH_LOGOUT} from './actionTypes'\r\nimport axios from 'axios'\r\n\r\nexport function auth(email, password, isLogin) {\r\n    return async dispatch => {\r\n\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        }\r\n\r\n        let url = ''\r\n        if (isLogin) {\r\n            url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyALD2dHT9lF2G6-J7nv3BtJkrMcUhk8HgI'\r\n        } else {\r\n            url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyALD2dHT9lF2G6-J7nv3BtJkrMcUhk8HgI'\r\n        }\r\n        const response = await axios.post(url, authData)\r\n        const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000)\r\n\r\n        localStorage.setItem('token', response.data.idToken)\r\n        localStorage.setItem('userId', response.data.localId)\r\n        localStorage.setItem('expirationDate', expirationDate)\r\n\r\n        dispatch(authSuccess(response.data.idToken))\r\n        dispatch(autoLogout(response.data.expiresIn))\r\n    }\r\n}\r\n\r\n export function authSuccess(idToken) {\r\n    return {\r\n        type: AUTH_SUCCESS,\r\n        token: idToken\r\n    }\r\n}\r\n\r\nexport function autoLogout(time) {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout())\r\n        }, time * 1000)\r\n    }\r\n}\r\n\r\nexport function logout(){\r\n        localStorage.removeItem('token')\r\n        localStorage.removeItem('userId')\r\n        localStorage.removeItem('expirationDate')\r\n    return {\r\n        type: AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport function autoLogin(){\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token')\r\n        if(!token){\r\n            dispatch(logout())\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\r\n            if(expirationDate <= new Date()) {\r\n                dispatch(logout())\r\n            } else {\r\n                dispatch(authSuccess(token))\r\n                dispatch(autoLogout(expirationDate.getTime() - new Date().getTime() / 1000))\r\n            }\r\n        }\r\n    }\r\n\r\n}","import React, { Component } from 'react'\r\nimport styles from './Auth.css'\r\nimport Input from '../../components/UI/Input/Input'\r\nimport Button from '../../components/UI/button/button'\r\nimport { connect } from 'react-redux'\r\nimport { auth } from '../../store/actions/authActions'\r\n\r\nfunction validateEmail(email) {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}\r\n\r\nclass Auth extends Component {\r\n\r\n    state = {\r\n        isFormValid: false,\r\n        formControls: {\r\n            email: {\r\n                value: '',\r\n                type: 'email',\r\n                label: 'Email',\r\n                errorMessage: 'Сдается мне ты пытаешься скользонуть?',\r\n                valid: false,\r\n                touched: false,\r\n                validations: {\r\n                    required: true,\r\n                    email: true\r\n                }\r\n            },\r\n            password: {\r\n                value: '',\r\n                type: 'password',\r\n                label: 'Пароль',\r\n                errorMessage: 'Пароль гниловат',\r\n                valid: false,\r\n                touched: false,\r\n                validations: {\r\n                    required: true,\r\n                    minLength: 6\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault()\r\n    }\r\n\r\n    loginHandler = (event) => {\r\n        if (!this.state.isFormValid) {\r\n            event.preventDefault()\r\n        }\r\n\r\n        this.props.auth(this.state.formControls.email.value, this.state.formControls.password.value, true)\r\n    }\r\n\r\n\r\n\r\n    registerHandler = () => {\r\n        this.props.auth(this.state.formControls.email.value, this.state.formControls.password.value, false)\r\n    }\r\n\r\n    renderInput() {\r\n        return Object.keys(this.state.formControls).map((formControl, index) => {\r\n            const control = this.state.formControls[formControl]\r\n\r\n            return (\r\n\r\n                \r\n                    <Input\r\n                    key={index}\r\n                    type={control.type}\r\n                    label={control.label}\r\n                    errorMessage={control.errorMessage}\r\n                    valid={control.valid}\r\n                    touched={control.touched}\r\n                    shouldValidate={true}\r\n                    onChange={event => this.onChangeHandler(event, formControl)}\r\n                />\r\n                \r\n                \r\n\r\n\r\n            )\r\n        })\r\n    }\r\n\r\n    validateControl(value, validations) {\r\n        if (!validations) {\r\n            return true\r\n        }\r\n\r\n        let isValid = true\r\n\r\n        if (validations.required) {\r\n            isValid = value.trim() !== '' && isValid\r\n        }\r\n\r\n        if (validations.email) {\r\n            isValid = validateEmail(value) && isValid\r\n        }\r\n\r\n        if (validations.minLength) {\r\n            isValid = value.length >= validations.minLength && isValid\r\n        }\r\n\r\n\r\n\r\n        return isValid\r\n\r\n    }\r\n\r\n    onChangeHandler = (event, formControl) => {\r\n\r\n        const formControls = { ...this.state.formControls }\r\n        const control = { ...formControls[formControl] }\r\n\r\n        control.value = event.target.value\r\n        control.touched = true\r\n        control.valid = this.validateControl(control.value, control.validations)\r\n\r\n        formControls[formControl] = control\r\n\r\n        let isFormValid = true\r\n\r\n        Object.keys(formControls).forEach(name => {\r\n            isFormValid = formControls[name].valid && isFormValid\r\n\r\n        })\r\n        \r\n        this.setState({\r\n            formControls,\r\n            isFormValid\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className={styles.Auth}>\r\n                <div>\r\n                    <h1>Аутентификация</h1>\r\n\r\n                    <form onSubmit={this.submitHandler} className={styles.AuthForm}>\r\n                        {this.renderInput()}\r\n\r\n                        <Button\r\n                            type=\"success\"\r\n                            onClick={this.loginHandler}\r\n                            disabled={!this.state.isFormValid}\r\n\r\n                        >\r\n                            Войти\r\n                        </Button>\r\n                        \r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={this.registerHandler}\r\n                            disabled={this.state.isFormValid}\r\n                        >\r\n                            Зарегистрироваться\r\n                        </Button>\r\n                    </form>\r\n                    <div>\r\n                    <p>Тестовые данные для входа в систему</p>\r\n                        <span>mail@gmail.com</span>  <span>123698745</span>  \r\n                    </div>  \r\n\r\n                </div>\r\n                \r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        auth: (email, password, isLogin) => dispatch(auth(email, password, isLogin))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Auth)\r\n\r\n","import React from 'react'\r\nimport styles from './Select.css'\r\n\r\n\r\n const Select = (props) => {\r\n    const htmlFor = `${props.label}-${Math.random()}`\r\n    return (<div className={styles.Select}>\r\n        <label htmlFor={htmlFor}></label>\r\n        <select \r\n        id={htmlFor}\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n        >\r\n            { props.options.map((option, index) =>{\r\n                return (\r\n                    <option\r\n                    value={option.value}\r\n                    key={option.value + index}\r\n                    >\r\n                        {option.text}\r\n                    </option>  \r\n                )\r\n            })}\r\n        </select>\r\n    </div>)\r\n}\r\n\r\nexport default Select","export function createControl(config, validation) {\r\n    return {\r\n        ...config,\r\n        validation,\r\n        valid: !validation, // Если передали что то в валидацию значение по умолчанию будет false\r\n        touched: false,\r\n        value: ''\r\n    }\r\n}\r\n\r\nexport function validate (value, validation = null) {\r\n    if(!validation){\r\n        return true\r\n    }\r\n\r\n    let isValid = true \r\n\r\n    if(validation.required) {\r\n        isValid = value.trim() !== '' && isValid\r\n    }\r\n    if(value <= validation.minLength){\r\n        isValid = false && isValid\r\n    }\r\n    return isValid\r\n}\r\n\r\nexport function  validateForm(formControls){\r\n    let isFormValid = true\r\n\r\n    for (let control in formControls) {\r\n        if (formControls.hasOwnProperty(control)) {\r\n          isFormValid = formControls[control].valid && isFormValid\r\n        }\r\n      }\r\n\r\n    return isFormValid\r\n}","import React from \"react\";\r\nimport styles from \"./QuestionareTitle.css\";\r\nimport Button from \"../../../components/UI/button/button\";\r\nimport Select from \"../../../components/UI/Select/Select\";\r\n\r\nconst QuestionareTitle = (props) => {\r\n    \r\n  return (\r\n    <form className={styles.QuestionareTitle}>\r\n      <label htmlFor=\"QuestionareTitle\">Ведите название Вашего опроса</label>\r\n      <input\r\n        id=\"QuestionareTitle\"\r\n        onChange={props.QuestionareTitleChange}\r\n      ></input>\r\n      <span className={styles.error}>{props.errorMessage}</span>\r\n\r\n      <Select\r\n        label=\"Здесь можно добавить изображение для карточки теста\"\r\n        value={props.questionareImg || 'other'}\r\n        onChange={props.QuestionareImgHandler}\r\n        options={[\r\n          { text: \"Биология\", value: 'biology' },\r\n          { text: \"Химия\", value: 'chemistry' },\r\n          { text: \"География\", value: 'geography' },\r\n          { text: \"Другое\", value: 'ozerMin' },\r\n        ]}\r\n      />\r\n      <Button type=\"primary\" onClick={props.QuestionareTitle}>\r\n        Подтвердить название\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default QuestionareTitle;\r\n","import axios from 'axios'\r\nimport { QUESTION, CREATE_QUIZ } from './actionTypes'\r\n\r\nexport function addQuestion(item) {\r\n    \r\n    return {\r\n        type: QUESTION,\r\n        item\r\n    }\r\n}\r\n\r\nexport function clearQuiz() {\r\n    return {\r\n        type: CREATE_QUIZ\r\n    }\r\n}\r\n\r\nexport async function createQuiz(quiz, dispatch) {\r\n    console.log('Опрос',quiz);\r\n    await axios.post('https://quiz-316f6.firebaseio.com/quizes.json', quiz).then(res=> {console.log(res)})\r\n}  \r\n","import React, { Component } from \"react\";\r\nimport styles from \"./QuizCreator.css\";\r\nimport Select from \"../../components/UI/Select/Select\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport Button from \"../../components/UI/button/button\";\r\nimport {\r\n  createControl,\r\n  validate,\r\n  validateForm,\r\n} from \"./../../FormFrames/formFrameworks\";\r\nimport QuestionareTitle from \"./QuestionareTitle/QuestionareTitle\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addQuestion,\r\n  createQuiz,\r\n  clearQuiz,\r\n} from \"../../store/actions/createTestActions\";\r\nimport { guestScreenOff } from \"../../store/actions/guestScreenActions\";\r\n\r\nfunction createFormControls() {\r\n  return {\r\n    question: createControl(\r\n      {\r\n        label: \"Введите вопрос\",\r\n        errorMessage: \"Вопрос не может быть пустым или короче 5 символов\",\r\n      },\r\n      {\r\n        required: true,\r\n        minLength: 5,\r\n      }\r\n    ),\r\n    option1: createControl(\r\n      {\r\n        label: \"Вариант 1\",\r\n        errorMessage: \"Вариант не должен быть пустым\",\r\n        id: 1,\r\n      },\r\n      { required: true }\r\n    ),\r\n    option2: createControl(\r\n      {\r\n        label: \"Вариант 2\",\r\n        errorMessage: \"Вариант не должен быть пустым\",\r\n        id: 2,\r\n      },\r\n      { required: true }\r\n    ),\r\n    option3: createControl(\r\n      {\r\n        label: \"Вариант 3\",\r\n        errorMessage: \"Вариант не должен быть пустым\",\r\n        id: 3,\r\n      },\r\n      { required: true }\r\n    ),\r\n    option4: createControl(\r\n      {\r\n        label: \"Вариант 4\",\r\n        errorMessage: \"Вариант не должен быть пустым\",\r\n        id: 4,\r\n      },\r\n      { required: true }\r\n    ),\r\n  };\r\n}\r\n\r\nclass QuizCreator extends Component {\r\n  state = {\r\n    questionareTitleSelected: false,\r\n    questionareTitle: \"\",\r\n    isFormValid: false,\r\n    rightAnswerId: 1,\r\n    formControls: createFormControls(),\r\n    questionareImg: 'ozerMin'\r\n  };\r\n\r\n  submitHandler = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  addQuestionHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const questionItem = {\r\n      questionareTitle: this.state.questionareTitle,\r\n      questionareImg: this.state.questionareImg,\r\n      question: this.state.formControls.question.value,\r\n      id: this.props.quiz.length + 1,\r\n      rightAnswerId: this.state.rightAnswerId,\r\n      answers: [\r\n        {\r\n          text: this.state.formControls.option1.value,\r\n          id: this.state.formControls.option1.id,\r\n        },\r\n        {\r\n          text: this.state.formControls.option2.value,\r\n          id: this.state.formControls.option2.id,\r\n        },\r\n        {\r\n          text: this.state.formControls.option3.value,\r\n          id: this.state.formControls.option3.id,\r\n        },\r\n        {\r\n          text: this.state.formControls.option4.value,\r\n          id: this.state.formControls.option4.id,\r\n        },\r\n      ],\r\n    };\r\n\r\n    this.props.addQuestion(questionItem);\r\n\r\n    this.setState({\r\n      isFormValid: false,\r\n      rightAnswerId: 1,\r\n      formControls: createFormControls(),\r\n    });\r\n  };\r\n\r\n  createQuizHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    this.setState({\r\n      isFormValid: false,\r\n      rightAnswerId: 1,\r\n      formControls: createFormControls(),\r\n      questionareTitleSelected: false,\r\n    });\r\n\r\n    createQuiz(this.props.quiz);\r\n    clearQuiz();\r\n    console.log(\"Все опросы\", this.props);\r\n    this.props.history.push(\"/\");\r\n    guestScreenOff();\r\n  };\r\n\r\n  changeHandler = (value, controlName) => {\r\n    const formControls = { ...this.state.formControls };\r\n    const control = { ...formControls[controlName] };\r\n\r\n    control.touched = true;\r\n    control.value = value;\r\n    control.valid = validate(control.value, control.validation);\r\n\r\n    formControls[controlName] = control;\r\n\r\n    this.setState({\r\n      formControls: formControls,\r\n      isFormValid: validateForm(formControls),\r\n    });\r\n  };\r\n\r\n  renderInputs = () => {\r\n    return Object.keys(this.state.formControls).map((controlN, index) => {\r\n      const control = this.state.formControls[controlN];\r\n\r\n      return (\r\n        <React.Fragment key={controlN + index}>\r\n          <Input\r\n            key={index}\r\n            label={control.label}\r\n            value={control.value}\r\n            valid={control.valid}\r\n            shouldValidate={!!control.validation}\r\n            touched={control.touched}\r\n            errorMessage={control.errorMessage}\r\n            onChange={(event) =>\r\n              this.changeHandler(event.target.value, controlN)\r\n            }\r\n          />\r\n\r\n          {index === 0 ? <hr></hr> : null}\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  };\r\n\r\n  selectChangeHandler = (event) => {\r\n    this.setState({\r\n      rightAnswerId: +event.target.value,\r\n    });\r\n  };\r\n\r\n  questionareTitle = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.questionareTitle.trim().length > 5) {\r\n      this.setState({\r\n        questionareTitleSelected: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  QuestionareTitleChange = (event) => {\r\n    let inputValue = event.target.value;\r\n    this.setState({\r\n      questionareTitle: inputValue,\r\n    });\r\n  };\r\n\r\n  QuestionareImgHandler = (event) => {\r\n    let inputValue = event.target.value;\r\n    this.setState({\r\n      questionareImg: inputValue,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const select = (\r\n      <Select\r\n        label=\"Выберите правильный ответ\"\r\n        value={this.state.rightAnswerId}\r\n        onChange={this.selectChangeHandler}\r\n        options={[\r\n          { text: 1, value: 1 },\r\n          { text: 2, value: 2 },\r\n          { text: 3, value: 3 },\r\n          { text: 4, value: 4 },\r\n        ]}\r\n      />\r\n    );\r\n    return (\r\n      <div className={styles.QuizCreator}>\r\n        {this.state.questionareTitleSelected === false ? (\r\n          <QuestionareTitle\r\n            QuestionareTitle={this.questionareTitle}\r\n            QuestionareTitleChange={this.QuestionareTitleChange}\r\n            QuestionareImgHandler={this.QuestionareImgHandler}\r\n            questionareImg={this.state.questionareImg}\r\n            errorMessage={\r\n              this.state.questionareTitle.trim().length > 5\r\n                ? null\r\n                : \"Заголовок не должен быть пустым или короче 5 сиволов\"\r\n            }\r\n          />\r\n        ) : (\r\n          <React.Fragment>\r\n            {console.log(this.state)}\r\n            <div>\r\n              <form onSubmit={this.submitHandler}>\r\n                <h1>Создание теста</h1>\r\n                {this.renderInputs()}\r\n\r\n                {select}\r\n                \r\n                <Button\r\n                  type=\"primary\"\r\n                  onClick={this.addQuestionHandler}\r\n                  disabled={!this.state.isFormValid}\r\n                >\r\n                  Добавить вопрос\r\n                </Button>\r\n              </form>\r\n            </div>\r\n            <div>\r\n              <h2>Детализация создаваемого теста</h2>\r\n\r\n              <h3>Заголовок теста '{this.state.questionareTitle}'</h3>\r\n              <div>\r\n                В тест добавлено вопросов{\" \"}\r\n                {this.props.quiz.length > 0 ? this.props.quiz.length : 0}\r\n              </div>\r\n              <ul className={styles.details}>\r\n                {this.props.quiz.map((question, index) => {\r\n                  return (\r\n                    <li key={index}>\r\n                      {index + 1}. {question.question}\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n              <Button\r\n                type=\"success\"\r\n                onClick={this.createQuizHandler}\r\n                disabled={this.props.quiz.length === 0}\r\n              >\r\n                Создать тест\r\n              </Button>\r\n            </div>\r\n          </React.Fragment>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    allQuestionnaireTitles: state.allTests.allQuestionnaireTitles,\r\n    quiz: state.createQuizi.quiz,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    addQuestion: (questionItem) => dispatch(addQuestion(questionItem)),\r\n    createQuiz: (quiz) => dispatch(createQuiz(quiz)),\r\n    clearQuiz: () => dispatch(clearQuiz()),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizCreator);\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../store/actions/authActions'\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        this.props.logout()\r\n    }\r\n    render() {\r\n        return <Redirect to={'/'}/>\r\n}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        logout: () => dispatch(logout())\r\n    }\r\n    \r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout)\r\n","import React, {Component} from 'react';\r\nimport Layout from './hoc/Layout/Layout'\r\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom'\r\nimport MainQuiz from './containers/MainQuiz'\r\nimport GuestScreen from './components/UI/GuestScreen/GuestScreen'\r\nimport Auth from './containers/Auth/Auth'\r\nimport QuizCreator from './containers/QuizeCreator/QuizCreator'\r\nimport './App.css';\r\nimport { connect } from 'react-redux';\r\nimport Logout from './components/Logout/Logout';\r\nimport { autoLogin } from './store/actions/authActions'\r\n\r\nclass App extends Component {\r\n  \r\n  componentDidMount() {\r\n    this.props.autoLogin()\r\n  }\r\n  \r\n  render(){\r\n    let routes = (\r\n      <Switch>\r\n        <Route path=\"/auth\" component={Auth} />\r\n        <Route path=\"/quiz/:id\" component={MainQuiz} />\r\n        <Route path=\"/\" exact component={GuestScreen} />\r\n        <Redirect to={'/'} />\r\n      </Switch>\r\n    )\r\n  \r\n    if (this.props.isAuthenticated) {\r\n      routes = (\r\n        <Switch>\r\n          <Route path=\"/create-quize\" component={QuizCreator} />\r\n          <Route path=\"/quiz/:id\" component={MainQuiz} />\r\n          <Route path=\"/logout\" component={Logout} />\r\n          <Route path=\"/\" exact component={GuestScreen} />\r\n          <Redirect to={'/'} />\r\n        </Switch>\r\n      )\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        <Layout>\r\n          {routes}\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    isAuthenticated: !!state.auth.token\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    autoLogin: () => dispatch(autoLogin())\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\r\n\r\n\r\n","\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        \r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n             \r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              \r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {\r\n    FETCH_QUESTIONARE_TITLES, FETCH_QUESTIONARE_TITLES_ERROR,\r\n    FETCH_TEST_ID,\r\n    FETCH_ACTIVE_QUESTIONARE_TITLE_AND_QUESTIONS,\r\n    RETRY_HANDLER,\r\n    ANSWER,\r\n    IS_QUESTIONNAIRE_FINISHED,\r\n    NEXT_QUESTION,\r\n    REPEAT_HANDLER,\r\n    // QUESTION,\r\n    // CREATE_QUIZ,\r\n    GUEST_SCREEN_OFF,\r\n    QUIZ_SET_STATE,\r\n    DELETE_QUESTIONARE\r\n} from '../actions/actionTypes'\r\n\r\nconst intialState = {\r\n    guestScreen: true,\r\n    allQuestionnaireTitles: ['Тестов не найдено'],\r\n    results: {}, //{[id]: success error}\r\n    testId: null, //||   props.location.pathname.split('/')[2],\r\n    isFinished: false,\r\n    questionsLoad: false,\r\n    activeQuestion: 0,\r\n    answerState: [],// {[answerId: 'success' or 'error']}\r\n    questionnaireTitle: '',\r\n    key: null,\r\n    questions: [],\r\n    // quiz: []\r\n}\r\n\r\n\r\nexport default function guestScreenReducer(state = intialState, action) {\r\n    switch (action.type) {\r\n        case FETCH_ACTIVE_QUESTIONARE_TITLE_AND_QUESTIONS: {\r\n            return {\r\n                ...state,\r\n                questionsLoad: true,\r\n                questionnaireTitle: action.questionnaireTitle,\r\n                questions: action.questions\r\n            }\r\n        }\r\n        case ANSWER: {\r\n            return {\r\n                ...state,\r\n                answerState: state.answerState.push(action.answerState),\r\n                results: action.results\r\n            }\r\n        }\r\n        case IS_QUESTIONNAIRE_FINISHED: {\r\n            return {\r\n                ...state,\r\n                isFinished: true,\r\n                answerState: []\r\n            }\r\n        }\r\n        case NEXT_QUESTION: {\r\n            return {\r\n                ...state,\r\n                activeQuestion: action.number,\r\n                answerState: []\r\n            }\r\n        }\r\n        case RETRY_HANDLER: {\r\n            return {\r\n                ...state,\r\n                results: {},\r\n                isFinished: false,\r\n                activeQuestion: 0,\r\n                answerState: []\r\n            }\r\n        }\r\n        case REPEAT_HANDLER: {\r\n            return {\r\n                ...state,\r\n                guestScreen: true,\r\n                isFinished: false,\r\n                activeQuestion: 0,\r\n                answerState: [],\r\n            }\r\n        }\r\n        case GUEST_SCREEN_OFF:\r\n            return {\r\n                ...state,\r\n                guestScreen: true,\r\n                allQuestionnaireTitles: ['Тестовый заголовок', 'Тестовый заголовок 2'],\r\n                results: {}, //{[id]: success error}\r\n                testId: null, //||   props.location.pathname.split('/')[2],\r\n                isFinished: false,\r\n                questionsLoad: false,\r\n                activeQuestion: 0,\r\n                answerState: [],// {[answerId: 'success' or 'error']}\r\n                questionnaireTitle: '',\r\n                key: null,\r\n                questions: [],\r\n                quiz: []\r\n            }\r\n        case FETCH_QUESTIONARE_TITLES:\r\n            return {\r\n                ...state,\r\n                allQuestionnaireTitles: action.allQuestionnaireTitles,\r\n                isFinished: false,\r\n                guestScreen: true,\r\n                testId: null,\r\n                questionnaireTitle: '',\r\n                questions: [],\r\n                questionsLoad: false\r\n            }\r\n        case FETCH_TEST_ID:\r\n            return {\r\n                ...state,\r\n                testId: action.testId,\r\n                guestScreen: false\r\n            }\r\n        case QUIZ_SET_STATE:\r\n            return {\r\n            ...state, answerState: action.answerState, results: action.results\r\n            }\r\n        // case QUESTION:\r\n        //     return {\r\n        //         ...state,\r\n        //         quiz: [...state.quiz, action.item]\r\n        //     }\r\n        // case CREATE_QUIZ:\r\n        //     return {\r\n        //         ...state,\r\n        //         quiz: []\r\n        //     }\r\n        case DELETE_QUESTIONARE:\r\n            return {\r\n                ...state, allQuestionnaireTitles: action.allQuestionnaireTitles\r\n                \r\n            }\r\n        case FETCH_QUESTIONARE_TITLES_ERROR:\r\n        default:\r\n            return state\r\n    }\r\n} ","import {AUTH_SUCCESS, AUTH_LOGOUT} from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n    token: ''\r\n  }\r\n  \r\n  export default function authReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n      case AUTH_SUCCESS:\r\n        return {\r\n          ...state, token: action.token\r\n        }\r\n      case AUTH_LOGOUT:\r\n        return {\r\n          ...state, token: null\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n    \r\n  }","import { QUESTION, CREATE_QUIZ } from '../actions/actionTypes'\r\n\r\nconst initState = {\r\n    quiz: []\r\n}\r\n\r\nexport default function quizCreatorReducer(state = initState, action) {\r\n    switch (action.type) {\r\n        case QUESTION:\r\n            return {\r\n                ...state,\r\n                quiz: [...state.quiz, action.item]\r\n            }\r\n        case CREATE_QUIZ:\r\n            return {\r\n                ...state,\r\n                quiz: []\r\n            }\r\n        default: {\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport guestScreenReducer from './guestScreenReducer'\r\nimport AuthReducer from './AuthReducer'\r\nimport quizCreatorReducer from './quizCreatorReducer'\r\n\r\nexport default combineReducers({\r\n    allTests: guestScreenReducer,\r\n    auth: AuthReducer, \r\n    createQuizi: quizCreatorReducer\r\n})\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { createStore, compose, applyMiddleware } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport rootReducer from './store/reducers/rootReducer'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst composeEnhancers =\r\n    typeof window === 'object' &&\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        }) : compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n\r\nconst app = (\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>\r\n)\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n\r\n"],"sourceRoot":""}